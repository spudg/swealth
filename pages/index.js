import Head from "next/head";
import Header from "../components/Header";
import AssetGrid from "../components/AssetGrid";
import LiabilityGrid from "../components/LiabilityGrid";
import AddAssetForm from "../components/AddAssetForm";
import AddLiabilityForm from "../components/AddLiabilityForm";

import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";
import { collection } from "firebase/firestore";
import { getDocs } from "firebase/firestore";
import {
  AppBar,
  Button,
  Dialog,
  getToolbarUtilityClass,
  Slide,
  Toolbar,
  Typography,
} from "@mui/material";
import { ThemeProvider } from "@mui/styles";
import React, { useEffect } from "react";

const firebaseConfig = {
  //Shhh
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

// Initialize Cloud Firestore and get a reference to the service
const db = getFirestore(app);

const Transition = React.forwardRef(function Transition(props, ref) {
  return <Slide direction="up" ref={ref} {...props} />;
});

export default function Home() {
  const [loading, setLoading] = React.useState(true);

  const [assets, setAssets] = React.useState(false);
  const [liabilities, setLiabilities] = React.useState(false);
  const [assetTotal, setAssetTotal] = React.useState(false);
  const [liabilityTotal, setLiabilityTotal] = React.useState(false);

  const handleAddAssetOpen = () => setOpenAddAsset(true);
  const handleAddAssetClose = () => setOpenAddAsset(false);
  const [openAddAsset, setOpenAddAsset] = React.useState(false);
  const handleAddLiabilityOpen = () => setOpenAddLiability(true);
  const handleAddLiabilityClose = () => setOpenAddLiability(false);
  const [openAddLiability, setOpenAddLiability] = React.useState(false);

  const getAssets = async () => {
    let assets = Array();
    const querySnapshot = await getDocs(collection(db, "assets"));
    querySnapshot.forEach((doc) => {
      let asset = doc.data();
      asset.id = doc.id;
      assets.push(asset);
    });
    setAssets(assets || []);
  };

  const getLiabilities = async () => {
    let liabilities = Array();
    const querySnapshot = await getDocs(collection(db, "liabilities"));
    querySnapshot.forEach((doc) => {
      let liability = doc.data();
      liability.id = doc.id;
      liabilities.push(liability);
    });
    setLiabilities(liabilities || []);
    setLoading(false);
  };

  const getTotals = () => {
    let aTotal = 0.0;
    let lTotal = 0.0;
    Object.keys(assets).forEach(function (key) {
      aTotal = aTotal + parseInt(assets[key].value);
    });
    Object.keys(liabilities).forEach(function (key) {
      lTotal = lTotal + parseInt(liabilities[key].value);
    });
    setAssetTotal(aTotal || []);
    setLiabilityTotal(lTotal || []);
  };

  useEffect(() => {
    getAssets();
  }, []);

  useEffect(() => {
    getLiabilities();
  }, []);

  useEffect(() => {
    getTotals();
  }, []);

  return (
    <>
      <Head>
        <title>swealth | Own your finances</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div style={{ marginTop: "20px", marginLeft: "20px" }}>
        <Header />
      </div>
      <div>
        <div
          style={{
            textAlign: "center",
            fontSize: "6em",
            marginTop: "100px",
          }}
        >
          {loading ? "..." : assetTotal - liabilityTotal}
        </div>
        <div
          style={{
            textAlign: "center",
            color: "#84928b",
            fontSize: "1em",
            fontStyle: "italic",
          }}
        >
          NET WORTH
        </div>
        <hr
          color="#3e3e3e"
          style={{
            marginLeft: "10%",
            marginRight: "10%",
            marginTop: "50px",
          }}
        />
        <div
          className="parent"
          style={{
            textAlign: "center",
            marginTop: "75px",
          }}
        >
          <div className="assetTitle">
            <div
              style={{
                textAlign: "center",
                fontSize: "4em",
              }}
            >
              {loading ? "..." : <p>{assetTotal}</p>}
            </div>
            <div
              style={{
                textAlign: "center",
                color: "#84928b",
                fontSize: ".8em",
                fontStyle: "italic",
              }}
            >
              ASSETS
            </div>
          </div>
          <div
            className="assetGrid"
            style={{ marginLeft: "150px", marginRight: "150px" }}
          >
            <Button onClick={handleAddAssetOpen} size="large">
              Add Asset
            </Button>
            <AssetGrid assets={assets} />
          </div>
          <div className="liabilityTitle">
            <div
              style={{
                textAlign: "center",
                fontSize: "4em",
              }}
            >
              {loading ? "..." : liabilityTotal}
            </div>
            <div
              style={{
                textAlign: "center",
                color: "#84928b",
                fontSize: ".8em",
                fontStyle: "italic",
              }}
            >
              LIABILITIES
            </div>
          </div>
          <div
            className="liabilityGrid"
            style={{ marginLeft: "150px", marginRight: "150px" }}
          >
            <Button onClick={handleAddLiabilityOpen} size="large">
              Add Liability
            </Button>
            <LiabilityGrid liabilities={liabilities} />
          </div>
        </div>
      </div>
      <Dialog
        open={openAddAsset}
        onClose={handleAddAssetClose}
        TransitionComponent={Transition}
        PaperProps={{
          style: { borderRadius: 15, background: "#121212" },
        }}
      >
        <ThemeProvider>
          <AppBar
            sx={{ position: "relative" }}
            style={{
              background: "#212121",
            }}
          >
            <Toolbar variant="dense">
              <Typography
                sx={{ ml: 3, flex: 1 }}
                variant="h6"
                component="div"
                style={{ fontFamily: "Quicksand" }}
              >
                Add asset
              </Typography>
              <Button
                autoFocus
                color="inherit"
                onClick={handleAddAssetClose}
                style={{ fontFamily: "Quicksand" }}
              >
                Close
              </Button>
            </Toolbar>
          </AppBar>
        </ThemeProvider>
        <div
          style={{
            margin: "20px",
            marginLeft: "80px",
            marginRight: "80px",
          }}
        >
          <AddAssetForm />
        </div>
      </Dialog>
      <Dialog
        open={openAddLiability}
        onClose={handleAddLiabilityClose}
        TransitionComponent={Transition}
        PaperProps={{
          style: { borderRadius: 15, background: "#121212" },
        }}
      >
        <ThemeProvider>
          <AppBar
            sx={{ position: "relative" }}
            style={{ background: "#212121" }}
          >
            <Toolbar variant="dense">
              <Typography
                sx={{ ml: 3, flex: 1 }}
                variant="h6"
                component="div"
                style={{ fontFamily: "Quicksand" }}
              >
                Add liability
              </Typography>
              <Button
                autoFocus
                color="inherit"
                onClick={handleAddLiabilityClose}
                style={{ fontFamily: "Quicksand" }}
              >
                Close
              </Button>
            </Toolbar>
          </AppBar>
        </ThemeProvider>
        <div
          style={{
            margin: "20px",
            marginLeft: "80px",
            marginRight: "80px",
          }}
        >
          <AddLiabilityForm />
        </div>
      </Dialog>
      ;
    </>
  );
}
